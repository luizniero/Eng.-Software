# Eng.-Software


CAPÍTULO 1
==========================================================================================================================================
        Responsabilidade profissional e ética:
    Um engenheiro de software precisa ter responsabilidade profissional, para não desmerecer a profissão.  Assim como demais
áreas da engenharia, é preciso dosar sua moral e seu caráter.  além disso, também precisa da responsabilidade ética, uma vez,
que é o responsável pela criação de programas, algumas situações podem ser de difícil decisão, como, por exemplo, entregar um
programa sem ter realizado os testes, por ordem do seu empregador.  É necessário, nesses casos, uma avaliação cautelosa dos
riscos que isso pode causar, ao empregador, ao contratante, à sociedade e ao próprio profissional, que pode ficar com o nome
queimado ou perder o emprego.

        Algumas definições:
    - Os produtos de software consistem de programas desenvolvidos e da documentação associada.  Os atributos essenciais do produto
são a facilidade de manutenção, a confiança, a eficiência e a facilidade de uso.
    - As atividades básicas do processo de desenvolvimento de software são:  Especificação, desenvolvimento, validação e evolução.
    - Métodos são meios organizados de produzir software.  Eles incluem sugestões sobre o processo a ser seguido, as notações
a serem utilizadas, as regras que regem as descrições de sistema produzidas e as diretrizes do projeto.
    - As ferramentas case são sistemas de software projetados para dar apoio ás atividades de rotina no processo de software.

CAPÍTULO 2
==========================================================================================================================================
        Sistema:  é a coleção significativa de componentes inter-relacionados, que trabalham em conjunto para atingir algum objetivo.
        Propriedades Emergentes dos Sistemas:
                - O peso total do sistema:  é uma propriedade emergente, qaue pode ser computada a partir das propriedades de componentes
        individuais.
                - A confiabilidade do sistema: Depende da confiabilidade dos componentes do sistema e do relacionamento entre eles
                - A facilidade de uso de um sistema: depende do hardware, do software e dos operadores do sistema, e do ambiente em qu
        ele será utilizado.
        
        
        Há dois tipos de propriedades emergentes:
                - Propriedades funcionais:  aparecem qdo todas as partes de um sistema trabalham em conjunto para atingir algum objetivo.
                - Propriedades não funcionais: como confiabilidade, desempenho, segurança e proteção.  Se relacionam com o comportamento
        do sistema em seu ambiente operacional.
        
        Confiabilidade do sistema:  Existem três influ~encias estreitamente relacionadas à confiabilidade global do sistema:
                1) Confiabilidade do hardware;
                2) Confiabilidade do Software;
                3) Confiabilidade do Operador.

        Sistemas e seu ambiente:
                Dentre os fatores humanos e organizacionais provenientes do ambiente do sistema, que afetam o projeto do sistema, destacam-se:
                1) Mudanças no processo:  O sistema requer mudanças nos processos de trabalho, no ambiente?  Se isso acontecer, certamente
                será exigido treinamento específico.  Se as muançdas foram significativas ou envolverem pessoas que percam seus empregos, 
                existe o perigo de os usuários resistirem ao sistema;
                2) Mudanças nas tarefas:  Os sistemas diminuiem a habilidade dos usuários ou faz com que eles modifiquem o modo com que trabalham?
                3) Mudanças organizacionais:  O sistema modifica a estrutura do poder político em uma organização?
                à medida em que um engenheiro de sistemas pega experiência, passa a compreender e prever melhor os riscos nesses ambientes.
                
        MOdelagem de Sistemas:
                Sistemas grandes devem ser subdivididos em subsistemas, com atividades exclusívas. Modelamos utilizando o diagrama de blocos.
                
                
        Na engenharia de um sistema, seguimos o seguinte processo:
                1) Definição de Requisitos
                2) Projeto do Sistema
                3) Desenvolvimento de subsistema
                4) Integração do sistema
                5) Instalação do Sistema
                6) Evolução do sistema
                7) Desativação do sistema
                
                1) Definição de Requisitos
                        - Requisitos funcionais Abstratos: A atividade de definição dos requisitos do sistema se destina a levantar os requisitos
                        do sistema como um todo.  A especificação detalhada de requisitos funcionais ocorre no nível do subsistema.
                        - Propriedades de sistemas: propriedades emergentes de sistemas não funcionais.
                        - Características que o sistema não deve exibir: Ás vezes, é tão importante especificar o que o sistema não deve fazer
                        quanto o que ele deve fazer.
                        Definir por que o sistema está sendo obtido para um ambiente específico, de modo que fique claro o que o sistema deve, realmente, fazer.
                        Também pode ocorrer de haver "problemas intrincados", que é tão complexo, que não existe uma especificação definitiva do problema.
                        a verdadeira natureza do problema somente emerge á medida que uma solução é desenvolvida.
                2) Projeto de Sistemas
                        Se ocupa de como a funcionalidade de sistemas deve ser fornecida pelos diferentes componentes do sistema.
                        - Agrupar os requisitos:  Sãoanalisados e reunidos em grupos relacionados
                        - Identificar subsistemas:  são identificados os subsistemas que devem atender aos requisitos.
                        - Atribuir requisitos a subsistemas:  Deve ser direto, se o agrupamento dos req. for utilizado para orientar a identificação
                        dos subsistemas.
                        - Especificar a funcionalidade de subsistema:  As funções que cada subsistema irá fazer.  Os relacionamentos entre os subsistemas
                        devem também ser identificados nesse estágio.
                        - Definir as interfaces de subsistemas: Uma vez que tenham sido especificadas, torna-se possível o desenvolvimento paralelo
                        de subsistemas.
                3) Desenvolvimento de subsistemas
                        - Cada subsistema é um sistema de software, e seus relacionamentos foram definidos no projeto.  Cabe aplicar técnicas de
                        engenharia em cada um destes softwares.  Alguns subsistemas são comerciais, que são adquiridos para a integração.  Muitas
                        vezes, vale a pena adquirir produtos de prateleira (COTS) para a integração de subsistemas, pois é menos custoso que desenvolver
                        um do zero (não reinvente a roda).
                        - Diferentes subsistemas são, geralmente, desenvolvidos em paralelo.
                4) Integração de sistemas
                        Envolve adotar os subsistemas desenvolvidos independentemente e agraupá-los, para que formem um sistema completo.
                        O processo de integração em fases é a abordagem mais apropriada por duas razões:
                                - Velocidade na entrega de todos os subsistemas
                                - Reduz os custos de localizaçãoi de erros.
                        As falhasde subsistemas que são consequência de suposições inválidas sobre outros subsistemas, geralmente, são reveladas durante
                        a integração de sistemas.
                5) Instalação de sistemas
                        Durante a instalação, o sistema é colocado no ambiente no qual deverá operar.
                        Um novo sistema pode ter de coexistir com um sistema anterior, até que a organização esteja certa de que o novo
                        sistema opera adequadamente.  Isso causará problemas específicos de instalação, se os sistemas não forem completamente
                        independentes, mas compartilham alguns componentes.
                6) Operação de sistemas
                        Problemas não detectados podem surgir neste estágio, porque a especificação do sistema pode conter erros ou omissões.
                7) Evolução de sistemas
                        São para corrigir os erros nos requisitos do sistema original e para implantar novas versões.
                        - Os subsistemas nunca são completamente independentes, as mudanças em um subsistema podem afetar adversamente o desempenho
                        e o comportamento de outros subsistemas.  Por isso é importante a documentação, pra não dar o famoso "bug".
                        - Os responsáveis pela evolução do sistema precisam entender por que foram tomadas determinadas decisões de projeto.
                8) Desativação de sistemas
                        significa tivar um sistema de serviço, após terminar seu tempo de vida útil operacional.  Se os dados no sistema que está
                        sendo desativado devem ser mantidos pela organização, eles precisam ser convertidos para uso por outro sistema.  Isso pode,
                        muitas vezes, envolver custos significaivos, pois a estrutura de dados pode etar implicitamente definida no próprio software.
        
        Suprimento de sistemas
                O processo de suprimento de sistemas envolve especificar o sistema, emitir um pedido de propostas, escolher um fornecedor
                e então estabelecer um contrato para o sistema.  Em geral, algumas partes de grandes sistemas com base em computadores são
                adquiridas como componentes de prateleira (COTS).
        
